#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseRenderText_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseRenderText_BP.BaseRenderText_BP_C
// 0x0010 (0x0250 - 0x0240)
class ABaseRenderText_BP_C : public ATextRenderActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BaseRenderText_BP(int32 EntryPoint);
	void SetShouldBeIgnoredForLots(bool bValue);
	void SetState(bool bStateA);
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	bool GetStateName(class FString* StateA, class FString* StateB);

	bool ShouldBeIgnoredForLots() const;
	bool IsStateA() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BaseRenderText_BP_C">();
	}
	static class ABaseRenderText_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseRenderText_BP_C>();
	}
};
static_assert(alignof(ABaseRenderText_BP_C) == 0x000008, "Wrong alignment on ABaseRenderText_BP_C");
static_assert(sizeof(ABaseRenderText_BP_C) == 0x000250, "Wrong size on ABaseRenderText_BP_C");
static_assert(offsetof(ABaseRenderText_BP_C, UberGraphFrame) == 0x000240, "Member 'ABaseRenderText_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABaseRenderText_BP_C, RBRandomizableHelper) == 0x000248, "Member 'ABaseRenderText_BP_C::RBRandomizableHelper' has a wrong offset!");

}

