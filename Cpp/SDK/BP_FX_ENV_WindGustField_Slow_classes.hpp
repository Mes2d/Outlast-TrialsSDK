#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_ENV_WindGustField_Slow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_ENV_WindGustField_Slow.BP_FX_ENV_WindGustField_Slow_C
// 0x0078 (0x02A8 - 0x0230)
class ABP_FX_ENV_WindGustField_Slow_C final : public ARBClientOnlyActor
{
public:
	class UNiagaraComponent*                      WindPtc;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EmitterSizeAlt;                                    // 0x0240(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindDirection;                                     // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindSpeedMulti;                                    // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindGustRateAlt;                                   // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeafEmitterOffset;                                 // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeafEmitterSizeAlt;                                // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallingDebrisRa;                                   // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeafKillzoneOffset;                                // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WindeColor;                                        // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindAlpha;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GustSize;                                          // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallingDebrisRate_backup;                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_ENV_WindGustField_Slow_C">();
	}
	static class ABP_FX_ENV_WindGustField_Slow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_ENV_WindGustField_Slow_C>();
	}
};
static_assert(alignof(ABP_FX_ENV_WindGustField_Slow_C) == 0x000008, "Wrong alignment on ABP_FX_ENV_WindGustField_Slow_C");
static_assert(sizeof(ABP_FX_ENV_WindGustField_Slow_C) == 0x0002A8, "Wrong size on ABP_FX_ENV_WindGustField_Slow_C");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindPtc) == 0x000230, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindPtc' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_FX_ENV_WindGustField_Slow_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, EmitterSizeAlt) == 0x000240, "Member 'ABP_FX_ENV_WindGustField_Slow_C::EmitterSizeAlt' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindDirection) == 0x00024C, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindDirection' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindSpeedMulti) == 0x000258, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindSpeedMulti' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindGustRateAlt) == 0x00025C, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindGustRateAlt' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, LeafEmitterOffset) == 0x000260, "Member 'ABP_FX_ENV_WindGustField_Slow_C::LeafEmitterOffset' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, LeafEmitterSizeAlt) == 0x00026C, "Member 'ABP_FX_ENV_WindGustField_Slow_C::LeafEmitterSizeAlt' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, FallingDebrisRa) == 0x000278, "Member 'ABP_FX_ENV_WindGustField_Slow_C::FallingDebrisRa' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, LeafKillzoneOffset) == 0x00027C, "Member 'ABP_FX_ENV_WindGustField_Slow_C::LeafKillzoneOffset' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindeColor) == 0x000288, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindeColor' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, WindAlpha) == 0x000298, "Member 'ABP_FX_ENV_WindGustField_Slow_C::WindAlpha' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, GustSize) == 0x00029C, "Member 'ABP_FX_ENV_WindGustField_Slow_C::GustSize' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WindGustField_Slow_C, FallingDebrisRate_backup) == 0x0002A0, "Member 'ABP_FX_ENV_WindGustField_Slow_C::FallingDebrisRate_backup' has a wrong offset!");

}

